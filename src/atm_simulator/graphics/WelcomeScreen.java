/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package atm_simulator.graphics;

import atm_simulator.ExitMessage;
import atm_simulator.Log;
import atm_simulator.com.database.DbConnector;
import javax.swing.JOptionPane;

/**
 *
 * @author kanel
 */
public class WelcomeScreen extends javax.swing.JFrame {

    /**
     * Creates new form WelcomeScreen
     */
    public WelcomeScreen() {
        this.setUndecorated(true);
        initComponents();
//        this.jTextField1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeMsg = new javax.swing.JLabel();
        insertMsg = new javax.swing.JLabel();
        insertButton = new javax.swing.JButton();
        cardID = new javax.swing.JTextField();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        welcomeMsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        welcomeMsg.setText("Welcome To our ATM service");

        insertMsg.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertMsg.setText("Please Insert the card to begin the session");

        insertButton.setText("Insert Card");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        cardID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardIDActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(insertMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cardID))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(welcomeMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(insertButton)
                .addGap(18, 18, 18)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        String cardId = cardID.getText();
        db1 = DbConnector.connectToDatabase();
        String obtaionPin = db1.searchingForPin(cardId);
        boolean blockedCard = db1.searchingBlockedAccount(cardId);
        if(cardId.isEmpty())   { 
            JOptionPane.showMessageDialog(null, "No card inserted. Insert the card first");
        }
        else if(blockedCard){          
            JOptionPane.showMessageDialog(null, "Sorry this card has been blocked. Can't access the service.");
            this.dispose();
        }
        else if(obtaionPin != null){
            Receipt.setCardID(cardId); 
            Log.setLogFileName(cardId);
            LoginScreen f1 = new LoginScreen();
            f1.setRealPin(obtaionPin);
            f1.setAccountNumber(cardId);
            this.setVisible(false);
            f1.setVisible(true);
        }

        else{
            JOptionPane.showMessageDialog(null, "Sorry the card couldn't be read try to insert again.\nThank you.");
            cardID.setText("");
        }
        
    }//GEN-LAST:event_insertButtonActionPerformed

    private void cardIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardIDActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        new ExitMessage().ExitMessage(this);
    }//GEN-LAST:event_exitButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cardID;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel insertMsg;
    private javax.swing.JLabel welcomeMsg;
    // End of variables declaration//GEN-END:variables
    private static DbConnector db1;
}
